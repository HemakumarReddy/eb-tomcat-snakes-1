trigger:
  - main

#for using single agent for all stages use below code.
pool:
    name: MyAppLinuxAgentPool
    demands:
     - DOCKER -equals YES
     - Terraform -equals YES
     - Packer -equals YES

stages:
    - stage: BuildingJavaCode
      jobs:
      - job: BuildingJavaCodeJob
        timeoutInMinutes: 10
        steps:
        - script: echo $(Build.BuildId)
          displayName: 'Display The Buld-ID'
        
        - script: ls -al && pwd
          displayName: 'List Files & Current Working Directory'

        - script: ls -al && chmod 700 build.sh && sudo bash ./build.sh && ls -al
          displayName: 'Run the build script'

        - script: ls -al && mv ROOT.war ROOT$(Build.BuildId).war && ls -al
          displayName: 'List Files & Rename ROOT.war'

        - script: cp ROOT$(Build.BuildId).war /tmp/artifacts && ls -al /tmp/artifacts
          displayName: 'Copy WAR to tmp folder'

        - task: CopyFiles@2
          inputs:
            Contents: 'ROOT$(Build.BuildId).war'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
            OverWrite: true
          displayName: 'Copying WAR file to ArtifactStagingDirector'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'ROOT$(Build.BuildId).war'
            publishLocation: 'Container'
          displayName: 'Publishing WAR Artifact.'

        - task: CopyFiles@2
          inputs:
             Contents: 'ROOT$(Build.BuildId).war'
             #Artifact staging directory is purged/cleaned after every build and due to that
             #Artifact is not availible for next stage.
             TargetFolder: '/tmp/artifacts'
             OverWrite: true
          continueOnError: true          
              
    - stage: CopyingArtifactsToAzureAndAws
      jobs:
      - job: CopyFilesToAzureBlob
        timeoutInMinutes: 10
        steps:
        - checkout: none

        - task: AzureCLI@2
          inputs:
            azureSubscription: 'devopsb19-azure-connection'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: 
              az storage blob upload-batch --account-name devopsb19adoartifacts --account-key $(STORAGE_ACCOUNT_KEY) --destination artifacts --source /tmp/artifacts/
          displayName: 'Azure Upload artifacts to Azure Blob'
          continueOnError: true
    - stage: BuildDockerImagePushToDockerHubAndAzureACR
      jobs:
      - job: BuildDockerImagePushToDockerHub
        timeoutInMinutes: 10
        steps:
        - checkout: none
        - task: Docker@2
          inputs:
            containerRegistry: 'devopsb19-dockerhub-connection'
            repository: 'hemakumardev/devopsb19ado'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'
          displayName: 'Creating & Pushing Docker Image To Docker HUB'
          continueOnError: true
      - job: BuildImagePushToAzureACR
        dependsOn: BuildDockerImagePushToDockerHub
        timeoutInMinutes: 10
        steps:
        - checkout: none
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script:
              echo "Logging in to Docker Hub..."
              docker login -u devopsb19 -p $(acrpassword) devopsb19.azurecr.io
              echo "Tagging Docker image..."
              docker tag hemakumar/devopsb19:$(Build.BuildId) devopsb19.azurecr.io/devopsb19:$(Build.BuildId)
              echo "Pushing Docker image to Azure Container Registry..."
              docker push devopsb19.azurecr.io/devopsb19:$(Build.BuildId)
          displayName: 'Creating & Pushing Docker Image To Azure ACR'


    - stage: DeleteTheRepo
      jobs:
      - job: DeleteTheRepoCntent
        timeoutInMinutes: 10
        steps:
        - checkout: none
        - script: cd /home/adminsree/myagent/_work/1/s && sudo rm -rf src
          displayName: 'Remove Files'

        - script: cd /tmp/artifacts && sudo rm -f *.war
          displayName: 'Remove Files From tmp Folder'